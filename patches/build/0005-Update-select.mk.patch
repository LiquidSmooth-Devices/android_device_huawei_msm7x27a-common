From 154626679fbe82f42b7626ff5d83441c09007c01 Mon Sep 17 00:00:00 2001
From: Y300-0100 <bosko.brajovich@gmail.com>
Date: Sun, 17 Aug 2014 21:46:49 +0200
Subject: [PATCH 5/7] Update select.mk

---
 core/combo/select.mk |   35 ++++++++---------------------------
 1 file changed, 8 insertions(+), 27 deletions(-)

diff --git a/core/combo/select.mk b/core/combo/select.mk
index 96f44d3..d5f7379 100644
--- a/core/combo/select.mk
+++ b/core/combo/select.mk
@@ -46,21 +46,11 @@ $(combo_target)HAVE_STRLCPY := 0
 $(combo_target)HAVE_STRLCAT := 0
 $(combo_target)HAVE_KERNEL_MODULES := 0
 
-$(combo_target)GLOBAL_CFLAGS := -fstrict-aliasing -Wstrict-aliasing=3 -Werror=strict-aliasing -fno-exceptions -Wno-multichar -Wno-error=unused-parameter -Wno-error=unused-but-set-variable
-$(combo_target)RELEASE_CFLAGS := -O3 -g -fstrict-aliasing -Wstrict-aliasing=3 -Werror=strict-aliasing -fno-tree-vectorize -fno-inline-functions -fno-unswitch-loops -fgcse-after-reload -fno-ipa-cp-clone -fno-vect-cost-model -Wno-error=unused-parameter -Wno-error=unused-but-set-variable
-ifeq ($(OPTIMIZE_LINKER),yes)
-$(combo_target)GLOBAL_LDFLAGS := -Wl,-O1 -Wl,--as-needed -Wl,--relax -Wl,--sort-common -Wl,--gc-sections
-else
+$(combo_target)GLOBAL_CFLAGS := -fno-exceptions -Wno-multichar
+$(combo_target)RELEASE_CFLAGS := -O2 -g -fno-strict-aliasing
 $(combo_target)GLOBAL_LDFLAGS :=
-endif
 $(combo_target)GLOBAL_ARFLAGS := crsP
 
-# Turn off strict-aliasing if we're building an AOSP variant without the
-# patchset...
-ifeq ($(DEBUG_NO_STRICT_ALIASING),yes)
-$(combo_target)RELEASE_CFLAGS += -fno-strict-aliasing -Wno-error=strict-aliasing
-endif
-
 $(combo_target)EXECUTABLE_SUFFIX :=
 $(combo_target)SHLIB_SUFFIX := .so
 $(combo_target)JNILIB_SUFFIX := $($(combo_target)SHLIB_SUFFIX)
@@ -89,22 +79,13 @@ ifneq ($(USE_CCACHE),)
     export CCACHE_BASEDIR := $(ANDROID_BUILD_TOP)
   endif
 
-  # It has been shown that ccache 3.x using direct mode can be several times
-  # faster than using the current ccache 2.4 that is used by default
-  # use the system ccache if it exists, else default to the one in prebuilts
-  ccache := $(shell which ccache)
-
-  ifeq ($(ccache),)
-    CCACHE_HOST_TAG := $(HOST_PREBUILT_TAG)
-    # If we are cross-compiling Windows binaries on Linux
-    # then use the linux ccache binary instead.
-    ifeq ($(HOST_OS)-$(BUILD_OS),windows-linux)
-      CCACHE_HOST_TAG := linux-$(BUILD_ARCH)
-    endif
-
-    ccache := prebuilts/misc/$(CCACHE_HOST_TAG)/ccache/ccache
+  CCACHE_HOST_TAG := $(HOST_PREBUILT_TAG)
+  # If we are cross-compiling Windows binaries on Linux
+  # then use the linux ccache binary instead.
+  ifeq ($(HOST_OS)-$(BUILD_OS),windows-linux)
+    CCACHE_HOST_TAG := linux-$(BUILD_ARCH)
   endif
-
+  ccache := prebuilts/misc/$(CCACHE_HOST_TAG)/ccache/ccache
   # Check that the executable is here.
   ccache := $(strip $(wildcard $(ccache)))
   ifdef ccache
-- 
1.7.9.5
